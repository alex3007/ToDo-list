{"version":3,"sources":["components/Body/Sorter/Item/Item.module.scss","components/Body/Filter/Filter.module.scss","components/Header/Header.module.scss","components/Body/Creator/Creator.module.scss","utils/objectUpdater.js","api/api.js","redux/body-reducer.js","redux/filter-reducer.js","redux/redux-store.js","assets/preloaders/three-dots.svg","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Body/Sorter/Item/Item.jsx","components/Body/Sorter/Sorter.jsx","components/Body/Filter/Filter.jsx","components/Body/Creator/Creator.jsx","components/Body/Body.jsx","components/Body/BodyContainer.jsx","App.js","index.js"],"names":["module","exports","updateObjectInArray","items","id","newObjData","map","u","serverUrl","api","axios","text","data","filterLabel","initialState","isFetching","toggleIsFetching","type","onDeleteItem","onToggleMarkDone","updateText","bodyReducer","state","action","item","filter","p","task","filterLabels","label","isChecked","filterReducer","f","reducers","combineReducers","body","filters","store","createStore","applyMiddleware","thunkMiddleware","Header","props","className","s","header","TransitionGroup","CSSTransition","timeout","classNames","src","preloader","compose","connect","Item","toggleMarkDone","deleteItem","onStartTexUpdating","setState","isEnabled","onTextUpdating","target","value","onFinishTexUpdating","saveUpdatedText","itemWrapper","React","createRef","this","onClick","markingIcon","onChange","disabled","bgWhite","bgTransparent","ref","placeholder","editIcon","dropIcon","Component","Sorter","activeFilter","find","visibleItems","i","indexOf","Filter","filterContainer","htmlFor","useFilter","switcher","Creator","taskArea","useState","setTask","addItem","evt","preventDefault","onSubmit","current","addIcon","Body","BodyContainer","getItems","dispatch","a","res","uuidv4","result","App","AppContainer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1efbd641.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgWhite\":\"Item_bgWhite__1NDlI\",\"markingIcon\":\"Item_markingIcon__x0DB-\",\"dropIcon\":\"Item_dropIcon__2aEg5\",\"editIcon\":\"Item_editIcon__2OTEK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__11fcb\",\"switcher\":\"Filter_switcher__KdgDW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1M8dn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addIcon\":\"Creator_addIcon__1j88e\"};","export const updateObjectInArray = (items, id, newObjData) => {\r\n    return items.map(u => {\r\n        if (u.id === id) {\r\n            return {...u, ...newObjData}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import * as axios from \"axios\";\r\nexport const serverUrl = `https://todoalexserver.herokuapp.com/`;\r\nexport const api = {\r\n    getItems() {\r\n        return axios.get(serverUrl)\r\n    },\r\n    addItem(id,text){\r\n        return axios.post(serverUrl, {id: id, text:text}\r\n        )\r\n    },\r\n    deleteItem(id){\r\n        return axios.delete(serverUrl, {data:{id: id}}\r\n        )\r\n    },\r\n    saveUpdatedText(id,text){\r\n        return axios.put(serverUrl, {id: id, text:text}\r\n        )\r\n    },\r\n    toggleMarkDone(id,filterLabel){\r\n        return axios.put(serverUrl, {id: id, filterLabel:filterLabel}\r\n        )\r\n    }\r\n}","import {updateObjectInArray} from \"../utils/objectUpdater\";\r\nimport {api} from \"../api/api\";\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nlet initialState = {\r\n    items: [],\r\n    isFetching: true\r\n};\r\n\r\nconst bodyReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_ITEMS':\r\n            return {...state, items: action.items};\r\n        case 'TOGGLE_IS_FETCHING': {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case 'ADD_ITEM': {\r\n            return {...state, items: [action.item, ...state.items]}\r\n        }\r\n        case 'DELETE_ITEM': {\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(p => p.id !== action.id)\r\n            }\r\n        }\r\n        case 'TOGGLE_MARK_DONE': {\r\n            return {\r\n                ...state,\r\n                items: updateObjectInArray(state.items, action.id,\r\n                    {filterLabel: [\"all\", action.filterLabel]})\r\n            }\r\n        }\r\n        case 'TEXT_UPDATE': {\r\n            return {\r\n                ...state,\r\n                items: updateObjectInArray(state.items, action.id,\r\n                    {task: action.text})\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const setItems = (items) => ({type: 'SET_ITEMS', items});\r\nexport const toggleIsFetching = (isFetching) => ({type: 'TOGGLE_IS_FETCHING', isFetching});\r\nexport const onAddItem = (item) => ({type: 'ADD_ITEM', item});\r\nexport const onDeleteItem = (id) => ({type: 'DELETE_ITEM', id});\r\nexport const onToggleMarkDone = (id, filterLabel) => ({type: 'TOGGLE_MARK_DONE', id, filterLabel});\r\nexport const updateText = (id, text) => ({type: 'TEXT_UPDATE', id, text});\r\n\r\nexport const getItems = () => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    const res = await api.getItems();\r\n    dispatch(setItems(res.data));\r\n    dispatch(toggleIsFetching(false));\r\n};\r\nexport const addItem = (text) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    let id = uuidv4();\r\n    const res = await api.addItem(id, text);\r\n    if (res.data.result) {\r\n        dispatch(onAddItem(res.data.item));\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n};\r\nexport const deleteItem = (id) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    const res = await api.deleteItem(id);\r\n    if (res.data.result) {\r\n        dispatch(onDeleteItem(res.data.id));\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n};\r\nexport const saveUpdatedText = (id, text) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    const res = await api.saveUpdatedText(id, text);\r\n    if (res.data.result) {\r\n        dispatch(updateText(res.data.id, res.data.text));\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n};\r\nexport const toggleMarkDone = (id, filterLabel) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    const res = await api.toggleMarkDone(id, filterLabel);\r\n    if (res.data.result) {\r\n        dispatch(onToggleMarkDone(res.data.id, res.data.filterLabel));\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n};\r\nexport default bodyReducer;","let initialState = {\r\n    filterLabels: [\r\n        {\r\n            label: \"all\",\r\n            isChecked: true\r\n        },\r\n        {\r\n            label: \"todo\",\r\n            isChecked: false\r\n        },\r\n        {\r\n            label: \"done\",\r\n            isChecked: false\r\n        }\r\n    ]\r\n}\r\n\r\nconst filterReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'USE_FILTER':\r\n            return {\r\n                ...state, filterLabels: state.filterLabels.map(f => {\r\n                    if (f.label === action.label) {\r\n                        return {\r\n                            ...f, isChecked: true\r\n                        }\r\n                    } else {\r\n                        return {\r\n                            ...f, isChecked: false\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const useFilter = (label) => ({type: 'USE_FILTER', label});\r\n\r\nexport default filterReducer;","import {applyMiddleware,combineReducers, createStore} from \"redux\";\r\nimport bodyReducer from \"./body-reducer\";\r\nimport filterReducer from \"./filter-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n\r\n    body: bodyReducer,\r\n    filters: filterReducer\r\n\r\n});\r\n\r\nlet store = createStore(reducers,applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","export default __webpack_public_path__ + \"static/media/three-dots.de1cde9d.svg\";","import React from 'react';\r\nimport s from './Header.module.scss';\r\nimport preloader from \"../../assets/preloaders/three-dots.svg\";\r\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className={s.header}>\r\n            <TransitionGroup>\r\n                {props.isFetching ?\r\n                    <CSSTransition timeout={1000} classNames=\"item\">\r\n                        <img src={preloader}/>\r\n                    </CSSTransition> : null}\r\n            </TransitionGroup>\r\n            <h1>ToDo list</h1>\r\n        </div>\r\n    )\r\n}\r\nexport default Header;\r\n\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst HeaderContainer =(props) => {\r\n        return (\r\n                <Header isFetching={props.isFetching}/>\r\n        )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isFetching: state.body.isFetching,\r\n    }\r\n};\r\n\r\nexport default compose(connect(mapStateToProps))(HeaderContainer);\r\n","import React from 'react';\r\nimport s from './Item.module.scss';\r\nimport {FaRegCircle, FaRegCheckCircle, FaRegTrashAlt, FaPen, FaPaperPlane} from \"react-icons/fa\";\r\n\r\nexport default class Item extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.itemWrapper = React.createRef();\r\n        this.state = {\r\n            isEnabled: false\r\n        }\r\n    }\r\n\r\n    onToggleMarkDone = () => {\r\n        this.props.toggleMarkDone(this.props.id, this.props.filterLabel);\r\n    }\r\n\r\n    onDeleteItem = () => {\r\n        this.props.deleteItem(this.props.id)\r\n    }\r\n\r\n    onStartTexUpdating = (text) => {\r\n        this.setState({...this.state, isEnabled: true})\r\n    }\r\n\r\n    onTextUpdating = (text) => {\r\n        this.props.updateText(this.props.id, text.target.value)\r\n    }\r\n\r\n    onFinishTexUpdating = () => {\r\n        this.props.saveUpdatedText(this.props.id, this.props.task)\r\n        this.setState({...this.state, isEnabled: false})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                {this.props.filterLabel === \"todo\"?\r\n                    <FaRegCircle onClick={this.onToggleMarkDone} className={s.markingIcon}/>:\r\n                    <FaRegCheckCircle onClick={this.onToggleMarkDone} className={s.markingIcon}/>}\r\n\r\n                <textarea onChange={this.onTextUpdating}\r\n                          value={this.props.task}\r\n                          disabled={!this.state.isEnabled}\r\n                          className={`${this.props.filterLabel === \"done\"?\r\n                              s.bgWhite: s.bgTransparent}`}\r\n                          ref={this.itemWrapper}\r\n                          placeholder='Todo'\r\n                />\r\n                {!this.state.isEnabled?\r\n                    <FaPen onClick={this.onStartTexUpdating} className={s.editIcon}/>:\r\n                    <FaPaperPlane onClick={this.onFinishTexUpdating} className={s.editIcon}/>}\r\n                <FaRegTrashAlt onClick={this.onDeleteItem} className={s.dropIcon}/>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Item from \"./Item/Item\";\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\r\n\r\nconst Sorter = (props) => {\r\n    let activeFilter = props.filters.find(f => f.isChecked === true);\r\n    let visibleItems = props.items.filter(i => i.filterLabel.indexOf(activeFilter.label) !== -1)\r\n    return (\r\n        <TransitionGroup>\r\n            {visibleItems.map(i =>\r\n                <CSSTransition key={i.id} timeout={500} classNames=\"item\">\r\n                    <Item\r\n                        id={i.id}\r\n                        task={i.task}\r\n                        filterLabel={i.filterLabel[1]}\r\n                        toggleMarkDone={props.toggleMarkDone}\r\n                        deleteItem={props.deleteItem}\r\n                        updateText={props.updateText}\r\n                        saveUpdatedText={props.saveUpdatedText}\r\n                    />\r\n                </CSSTransition>\r\n            )\r\n            }\r\n        </TransitionGroup>\r\n    )\r\n}\r\n\r\nexport default Sorter;","import React from \"react\";\r\nimport s from \"./Filter.module.scss\";\r\nimport {FaToggleOff, FaToggleOn} from \"react-icons/fa\";\r\n\r\nconst Filter = (props) => {\r\n\r\n    return (\r\n        <div className={s.filterContainer}>\r\n            {props.filters.map(f => (\r\n                <label\r\n                    key={`${f.label}_key`}\r\n                    htmlFor={f.label}\r\n                    id={f.label}\r\n                    onClick={() => {\r\n                        props.useFilter(f.label)\r\n                    }}>\r\n                    {f.isChecked ?\r\n                        <FaToggleOn className={s.switcher}/> :\r\n                        <FaToggleOff className={s.switcher}/>}\r\n                    {f.label}\r\n                </label>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React, {useState} from \"react\";\r\nimport s from \"./Creator.module.scss\";\r\nimport {FaPlus} from \"react-icons/fa\";\r\n\r\nconst Creator = (props) => {\r\n    let taskArea = React.createRef();\r\n    const [task, setTask] = useState(\"\");\r\n    const addItem = (evt) => {\r\n        evt.preventDefault();\r\n        task !== \"\" && props.addItem(task);\r\n        setTask(\"\")\r\n    }\r\n    return (\r\n        <form onSubmit={addItem}>\r\n            <input placeholder=\"Enter todo...\"\r\n                   onChange={() => {\r\n                       setTask(taskArea.current.value)\r\n                   }}\r\n                   ref={taskArea}\r\n                   value={task}\r\n            />\r\n            <FaPlus className={s.addIcon}\r\n                    onClick={addItem}/>\r\n        </form>\r\n    )\r\n};\r\nexport default Creator;\r\n\r\n","import React from \"react\";\r\nimport Sorter from \"./Sorter/Sorter\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport Creator from \"./Creator/Creator\";\r\n\r\nconst Body = (props) => {\r\n    return (\r\n        <div>\r\n            <Creator\r\n                addItem={props.addItem}\r\n            />\r\n            <Filter\r\n                filters={props.filters}\r\n                useFilter={props.useFilter}\r\n            />\r\n            <Sorter\r\n                filters={props.filters}\r\n                items={props.items}\r\n                toggleMarkDone={props.toggleMarkDone}\r\n                deleteItem={props.deleteItem}\r\n                updateText={props.updateText}\r\n                saveUpdatedText={props.saveUpdatedText}\r\n\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body;\r\n","import React from \"react\";\r\nimport Body from \"./Body\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {getItems, addItem, deleteItem, toggleMarkDone, updateText, saveUpdatedText\r\n} from \"../../redux/body-reducer\";\r\nimport {useFilter} from \"../../redux/filter-reducer\";\r\n\r\n\r\nclass BodyContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getItems()\r\n    }\r\n    render() {\r\n        return (\r\n                <Body\r\n                    items={this.props.items}\r\n                    isFetching={this.props.isFetching}\r\n                    filters={this.props.filters}\r\n                    addItem={this.props.addItem}\r\n                    toggleMarkDone={this.props.toggleMarkDone}\r\n                    deleteItem={this.props.deleteItem}\r\n                    updateText={this.props.updateText}\r\n                    saveUpdatedText={this.props.saveUpdatedText}\r\n                    useFilter={this.props.useFilter}\r\n                />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        items: state.body.items,\r\n        isFetching: state.body.isFetching,\r\n        filters: state.filters.filterLabels\r\n    }\r\n};\r\n\r\nexport default compose(connect(mapStateToProps,{\r\n    getItems, addItem, deleteItem, toggleMarkDone, updateText, saveUpdatedText, useFilter\r\n    }))(BodyContainer);\r\n","import './App.css';\nimport React from \"react\";\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport BodyContainer from \"./components/Body/BodyContainer\";\n\nexport const App = () => {\n    return (\n                <div className=\"App\">\n                    <HeaderContainer/>\n                    <BodyContainer/>\n                </div>\n    )\n}\n\nconst AppContainer = () => {\n    return (\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    )\n}\n\nexport default AppContainer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppContainer from './App';\n\n    ReactDOM.render( <AppContainer/>,\n        document.getElementById('root'));\n\n"],"sourceRoot":""}